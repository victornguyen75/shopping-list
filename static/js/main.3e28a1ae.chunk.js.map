{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","item","setItem","onSubmit","e","preventDefault","newList","push","id","Math","random","name","category","quantity","price","value","onChange","target","placeholder","type","disabled","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLA2CeA,MAxCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAsBb,OAAQ,qCACN,uBAAMC,SAnBQ,SAAAC,GACdA,EAAEC,iBACF,IAAIC,EAAO,YAAOP,GAElBO,EAAQC,KACN,CACEC,GAAI,EAAIC,KAAKC,SACbC,KAAMV,EACNW,SAAU,GACVC,SAAU,GACVC,MAAO,KAIXd,EAAQM,GACRJ,EAAQ,KAIR,UACE,uBAAOa,MAAOd,EAAMe,SAAU,SAAAZ,GAAC,OAAIF,EAAQE,EAAEa,OAAOF,QAAQG,YAAY,mBACxE,wBAAQC,KAAK,SAASC,UAAWnB,EAAjC,oBAEF,oDACA,6BACGF,EAAKsB,KAAI,SAAApB,GACR,OACE,6BACGA,EAAKU,MADCV,EAAKO,aCtBTc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e28a1ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [item, setItem] = useState('');\n\n  const addItem = e => {\n    e.preventDefault();\n    let newList = [...list];\n\n    newList.push(\n      {\n        id: 1 + Math.random(),\n        name: item,\n        category: '',\n        quantity: '',\n        price: '',\n      }\n    );\n\n    setList(newList);\n    setItem('');\n  }\n\n  return (<>\n    <form onSubmit={addItem}>\n      <input value={item} onChange={e => setItem(e.target.value)} placeholder=\"Add a new item\"/>\n      <button type=\"submit\" disabled={!item}>Add</button>\n    </form>\n    <h2>Pending Items List</h2>\n    <ul>\n      {list.map(item => {\n        return (\n          <li key={item.id}>\n            {item.name}\n          </li>\n        );\n      })}\n    </ul>\n  </>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}